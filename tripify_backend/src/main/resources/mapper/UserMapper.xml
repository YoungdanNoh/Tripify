<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trip.user.mapper.UserMapper">

	<resultMap id="userResultMap" type="User">
		<result property="userId" column="user_id" />
		<result property="userName" column="username" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="profileImage" column="profile_image" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>
	
	<!-- resultMap을 사용하면, resultType이 아니라 resultMap에 값을 넣어야 함.  -->
	<select id="find" parameterType="java.util.Map" resultMap="userResultMap">
		select  user_id, username, email, password, profile_image, date(created_at) created_at, date(updated_at) updated_at
		from users where email = #{email} and password = #{password};
	</select>
		
	<!-- 회원 가입 -->
	<insert id="add" parameterType="User">
        insert into users(username, email, password) values(#{userName},#{email},#{password});
	</insert>
	
	<!-- 회원 수정 -->
	<update id="modify" parameterType="User">
		update users set username = #{userName}, updated_at = now(), password= #{password}, profile_image=#{profileImage}
        where email =#{email};
	</update>
	
	<!-- 회원 조회 -->
	<select id="findById" parameterType="string" resultMap="userResultMap">
		select * from users where user_id = #{userId}
	</select>
	
	<delete id="delete" parameterType="string">
		delete from users where email = #{email};
	</delete>

	<!-- id 중복 검사 -->
	<select id="checkIdDuplicate" resultType="User">
		select * from users where email = #{email};
	</select>
	
	<!-- 비밀 번호 찾기  -->
	<select id="findPwdById" parameterType="string" resultType="string">
		select password from users where email = #{email}
	</select>
	
	<!-- 사용자 조회 (이메일 기반) -->
    <select id="getUserByEmail" parameterType="string" resultType="User">
        SELECT * FROM users
        WHERE email = #{email}
    </select>
    
     <!-- 프로필 이미지 URL 업데이트 -->
    <update id="updateProfileImage" parameterType="map">
        UPDATE users
        SET profile_image = #{profileImage}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 정보 조회 (이미지 포함) -->
    <select id="getUserById" resultType="User">
        SELECT user_id, username, email, profile_Image, created_at
        FROM users
        WHERE user_id = #{userId}
    </select>
</mapper>